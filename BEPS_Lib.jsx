//These functions automate many menus in Photoshop.  This library toook many hours of debugging and plodding through obscure forums to find many undocumented call in Photoshop.
//Functions are named in accordance with the menu structure in Photoshop to easily associate functions with Photshop behavior.
//A good deal of code was auto generated by converting Photoshop actions into Javasript.  Often I parameterized it to allow for more functionality

var BEPS = new Object;

function cTID(s) { return app.charIDToTypeID(s); };
function sTID(s) { return app.stringIDToTypeID(s); };

BEPS.doMenuItem = function(item, interactive) {  //CHECK THE ENUMERATION FILE FOR MORE
//     BEPS.doMenuItem(cTID('ActP')); // Set Zoom to 100%
//     BEPS.doMenuItem(cTID('ZmIn')); // Zoom in on time more. (200 %)
//     BEPS.doMenuItem(sTID('screenModeFullScreen')); // Show full screen mode (Exit this mode with pressing key 'f')
 
var ref = new ActionReference();
	ref.putEnumerated(cTID("Mn  "), cTID("MnIt"), item);

   var desc = new ActionDescriptor();
   desc.putReference(cTID("null"), ref);

   try {
     var mode = (interactive != true ? DialogModes.NO : DialogModes.ALL);
     executeAction(sTID("select"), desc, mode);
   } catch (e) {
     if (!e.message.match("User cancelled")) {
       throw e;
     } else {
       return false;
     };
   };
   return true;
};

BEPS.selectTool = function (tool) {
//      BEPS.selectTool('lineTool');// Select the line tool
    var desc = new ActionDescriptor();
        var ref = new ActionReference();
        ref.putClass( sTID(tool) );
    desc.putReference( cTID('null'), ref );
    executeAction( cTID('slct'), desc, DialogModes.NO );
};


//Document object functions
BEPS.bDocument_Modified = function(){//RETURN: TRUE - if in the PS Document tab name there is an *  (asterics); FALSE - always immediately after the document has been saved
var ref = new ActionReference();
ref.putEnumerated( charIDToTypeID("Dcmn"), charIDToTypeID("Ordn"), charIDToTypeID("Trgt") ); 
return executeActionGet(ref).getBoolean(stringIDToTypeID('isDirty'));
}
//Menu===========================
//File - Menu Functions
BEPS.File_CloseWithoutDialogs = function(psDoc){/* for unknown reasons closing afile with newDoc.close(SaveOptions.DONOTSAVECHANGES) still results in a dialog
doc = photoshop document
*/

//to speed it up we resize it to a single pixel first
app.activeDocument = psDoc
psDoc.flatten();
psDoc.resizeCanvas(1,1,AnchorPosition.TOPLEFT)
//var fFile = File(psDoc.path + "/DELETE ME.tif")
var fFile = File(oLog.LogPath + "DELETE ME.tif")
fFile.remove()
BEPS.File_Save(fFile,"tif")
psDoc.close(SaveOptions.DONOTSAVECHANGES)
fFile.remove()
}
BEPS.File_Save = function(sPathFileExt,sFileType){/*save a file to a path
sfilePath = '/c/test/test.tif'
sType = switch:'tif',
*/

"tif-pyramid"
    //doc.flatten(); 
    var fFile = new File(sPathFileExt);
	//doc.layers[0].name = curLayer
    app.activeDocument.saveAs(fFile, SetSaveOptions(sFileType), false, Extension.LOWERCASE ); 
    //doc.close( SaveOptions.DONOTSAVECHANGES ); 

	function SetSaveOptions(sType){
		switch (sType.toLowerCase()){
			case "tif":{
				SaveOptions = new TiffSaveOptions(); 
				SaveOptions.embedColorProfile = true; 
				SaveOptions.alphaChannels = true; 
				SaveOptions.imageCompression = TIFFEncoding.TIFFLZW;
                break;
			}
        			case "tif-pyramid":{
				SaveOptions = new TiffSaveOptions(); 
				SaveOptions.embedColorProfile = true; 
				SaveOptions.alphaChannels = true; 
				SaveOptions.imageCompression = TIFFEncoding.TIFFLZW;
                  SaveOptions.saveImagePyramid = true;
                break;
			}
		} //end switch
		return SaveOptions; 
	} 

} 

BEPS.File_SaveJPEG = function(fPathFile, iJPEGQuality) { //RETURN nothing : saves active document with said quality
  if(iJPEGQuality === undefined || iJPEGQuality === null)var iJPEGQuality = 8
		jpgSaveOptions = new JPEGSaveOptions();
		jpgSaveOptions.embedColorProfile = true;
		jpgSaveOptions.formatOptions = FormatOptions.STANDARDBASELINE;
		jpgSaveOptions.matte = MatteType.NONE;
		jpgSaveOptions.quality = iJPEGQuality; //1-12
		activeDocument.saveAs(fPathFile, jpgSaveOptions, true, Extension.LOWERCASE);
	}

//Edit - Menu Functions
BEPS.Edit_PasteSpecial_PasteInPlace = function(){ //paste in place

    var desc7 = new ActionDescriptor();
    desc7.putBoolean( sTID('inPlace'), true );
    desc7.putEnumerated( cTID('AntA'), cTID('Annt'), cTID('Anno') );
    executeAction( cTID('past'), desc7, DialogModes.NO );
}
BEPS.Edit_AutpAlignLayers = function(sDistortion){ //RETURN: Nothing - autoaligns selected latyers to each other
//sDistortion = "radialDistort", ...
     var idAlgn = charIDToTypeID( "Algn" );
        var desc24 = new ActionDescriptor();
        var idnull = charIDToTypeID( "null" );
            var ref7 = new ActionReference();
            var idLyr = charIDToTypeID( "Lyr " );
            var idOrdn = charIDToTypeID( "Ordn" );
            var idTrgt = charIDToTypeID( "Trgt" );
            ref7.putEnumerated( idLyr, idOrdn, idTrgt );
        desc24.putReference( idnull, ref7 );
        var idUsng = charIDToTypeID( "Usng" );
        var idADSt = charIDToTypeID( "ADSt" );
        var idADSContent = stringIDToTypeID( "ADSContent" );
        desc24.putEnumerated( idUsng, idADSt, idADSContent );
        var idAply = charIDToTypeID( "Aply" );
        var idprojection = stringIDToTypeID( "projection" );
        var idPrsp = charIDToTypeID( "Prsp" );
        desc24.putEnumerated( idAply, idprojection, idPrsp );
        var idvignette = stringIDToTypeID( "vignette" );
        desc24.putBoolean( idvignette, false );
        var idradialDistort = stringIDToTypeID( sDistortion);
        desc24.putBoolean( idradialDistort, false );
    executeAction( idAlgn, desc24, DialogModes.NO );
}


BEPS.Edit_AutoBlendLayers = function(sType){//RETURN: Nothing - blends selected layers together
//sType = "panorama", ...
var idmergeAlignedLayers = stringIDToTypeID( "mergeAlignedLayers" );
    var desc41 = new ActionDescriptor();
    var idAply = charIDToTypeID( "Aply" );
    var idautoBlendType = stringIDToTypeID( "autoBlendType" );
    var idpanorama = stringIDToTypeID( sType );
    desc41.putEnumerated( idAply, idautoBlendType, idpanorama );
    var idClrC = charIDToTypeID( "ClrC" );
    desc41.putBoolean( idClrC, true );
executeAction( idmergeAlignedLayers, desc41, DialogModes.NO );
}
//Layer - Menu functions
BEPS.Layer_LayerMask_RevealAll = function(){//RETURN Nothing: Creates a normal layers mask on the activated layer or layerset
    var desc59 = new ActionDescriptor();
    desc59.putClass( cTID('Nw  '), cTID('Chnl') );
        var ref37 = new ActionReference();
        ref37.putEnumerated( cTID('Chnl'), cTID('Chnl'), cTID('Msk ') );
    desc59.putReference( cTID('At  '), ref37 );
    desc59.putEnumerated( cTID('Usng'), cTID('UsrM'), cTID('RvlA') );
    executeAction( cTID('Mk  '), desc59, DialogModes.NO );
};
BEPS.Layer_LayerStyle_BlendingOptions = function(sBlendMode, enabled, withDialog){ //RETURN nothing: apply a blending mode to the activated layer
/*
  sBlendMode can accept the following values
 -------------------------------
 'Nrml' - Normal
'Dslv' - Dissolve
-------------------------------
'Drkn' - Darken
'Mltp' - Multiply
'CBrn' - Color Burn
"linearBurn" - Linear Burn
"darkerColor" - Darker Color
 -------------------------------
'Lghn' - Lighten
'Scrn' - Screen
'CDdg' - Color Dodge
"linearDodge" - Linear Dodge (Add)
lighterColor" - Lighter Color
 -------------------------------
'Ovrl' - Overlay
'SftL' - Soft Light
'HrdL' - Hard Light
"vividLight" - Vivid Light
"linearLight" - Linear Light
"pinLight" - Pin Light
"hardMix" - Hard Mix
 -------------------------------
'Dfrn' - Difference
'Xclu' - Exclusion
'blendSubtraction' - Subtract
'blendDivide' - Divide
 -------------------------------
'H   ' - Hue  (there are three spaces in this name)
'Strt' - Saturation
'Clr ' - Color (three is once space in this name)
'Lmns' - Luminosity
 -------------------------------
 */
  
    if (enabled != undefined && !enabled)
      return;
    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);
    var desc1 = new ActionDescriptor();
    var ref1 = new ActionReference();
    ref1.putEnumerated(cTID('Lyr '), cTID('Ordn'), cTID('Trgt'));
    desc1.putReference(cTID('null'), ref1);
    var desc2 = new ActionDescriptor();
    desc2.putEnumerated(cTID('Md  '), cTID('BlnM'), cTID(sBlendMode));
    desc1.putObject(cTID('T   '), cTID('Lyr '), desc2);
    executeAction(cTID('setd'), desc1, dialogMode);
  };


BEPS.Layer_LayerStyle_Stroke = function(iSize, sPosition, aFillColor, enabled, withDialog){//RETURN nothing: apply a stroke to a selection
  //BEPS.Layer_LayerStyle_Stroke(5, "Inside", [0,255,0])
if(iSize === undefined || iSize === null)var iSize = 2 // 1 to 250  stroke size in pixels  
if(sPosition === undefined || sPosition === null)var sPosition = 'OutF' //valid values: Outside, Inside, Center
if(aFillColor === undefined || aFillColor === null)var aFillColor = [0,0,0] //valid values: 0-255 for each element [Red, Green, Blue]

switch(sPosition){
  case "Outside" : sPosition ='OutF' ; break;
  case "Inside" : sPosition ='InsF' ; break;
  case "Center" : sPosition ='OutF' ; break;
  default :  sPosition ='CtrF' ; break;
  }
 
    if (enabled != undefined && !enabled)
      return;
    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);
    var desc1 = new ActionDescriptor();
    var ref1 = new ActionReference();
    ref1.putProperty(cTID('Prpr'), cTID('Lefx'));
    ref1.putEnumerated(cTID('Lyr '), cTID('Ordn'), cTID('Trgt'));
    desc1.putReference(cTID('null'), ref1);
    var desc2 = new ActionDescriptor();
    desc2.putUnitDouble(cTID('Scl '), cTID('#Prc'), 333.333333333333);
    var desc3 = new ActionDescriptor();
    desc3.putBoolean(cTID('enab'), true);
    desc3.putEnumerated(cTID('Styl'), cTID('FStl'), cTID(sPosition));
    desc3.putEnumerated(cTID('PntT'), cTID('FrFl'), cTID('SClr'));
    desc3.putEnumerated(cTID('Md  '), cTID('BlnM'), cTID('Nrml'));
    desc3.putUnitDouble(cTID('Opct'), cTID('#Prc'), 100);
    desc3.putUnitDouble(cTID('Sz  '), cTID('#Pxl'), iSize);
    var desc4 = new ActionDescriptor();
    desc4.putDouble(cTID('Rd  '), aFillColor[0]);
    desc4.putDouble(cTID('Grn '), aFillColor[1]);
    desc4.putDouble(cTID('Bl  '), aFillColor[2]);
    desc3.putObject(cTID('Clr '), sTID("RGBColor"), desc4);
    desc2.putObject(cTID('FrFX'), cTID('FrFX'), desc3);
    desc1.putObject(cTID('T   '), cTID('Lefx'), desc2);
    executeAction(cTID('setd'), desc1, dialogMode);
  }
BEPS.Layer_MergeDown = function() {//RETURN Nothing - Merges all selected layers to a single layer
    executeAction( charIDToTypeID('Mrg2'), undefined, DialogModes.NO );
}


BEPS.Layer_NewAdjustmentLayer_AddBlackAndWhite = function(iReds ,iYellows ,iGreens ,iCyans ,iBlues ,iMagnetas ,bTint ,lTintRed ,lTintGreen ,lTintBlue, enabled, withDialog) {
//enabled = boolean: false = skip this action
//withDialog = boolean: true will show the dialog (if enabled == false then the dialog does not show anyway)

//Default Values
if(iReds === undefined)var iReds = 40 // -200 to 300
if(iYellows === undefined)var iYellows = 60 // -200 to 300
if(iGreens === undefined)var iGreens = 40 // -200 to 300
if(iCyans === undefined)var iCyans = 60 // -200 to 300
if(iBlues === undefined)var iBlues = 20 // -200 to 300
if(iMagnetas === undefined)var iMagnetas = 80 // -200 to 300
if(bTint === undefined)var bTint = false // True: Use tint color . False: no tint color
if(lTintRed === undefined)var lTintRed = 225.000457763672 //
if(lTintGreen === undefined)var lTintGreen = 211.000671386719 //  SEPIA 
if(lTintBlue === undefined)var lTintBlue = 179.001159667969 //

    if (enabled != undefined && !enabled)
      return;
    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);
    var desc1 = new ActionDescriptor();
    var ref1 = new ActionReference();
    ref1.putClass(cTID('AdjL'));
    desc1.putReference(cTID('null'), ref1);
    var desc2 = new ActionDescriptor();
    var desc3 = new ActionDescriptor();
    desc3.putEnumerated(sTID("presetKind"), sTID("presetKindType"), sTID("presetKindDefault"));
    desc3.putInteger(cTID('Rd  '), iReds);
    desc3.putInteger(cTID('Yllw'), iYellows);
    desc3.putInteger(cTID('Grn '), iGreens);
    desc3.putInteger(cTID('Cyn '), iCyans);
    desc3.putInteger(cTID('Bl  '), iBlues);
    desc3.putInteger(cTID('Mgnt'), iMagnetas);
    desc3.putBoolean(sTID("useTint"), bTint);
    var desc4 = new ActionDescriptor();
    desc4.putDouble(cTID('Rd  '), lTintRed);
    desc4.putDouble(cTID('Grn '), lTintGreen);
    desc4.putDouble(cTID('Bl  '), lTintBlue);
    desc3.putObject(sTID("tintColor"), sTID("RGBColor"), desc4);
    desc2.putObject(cTID('Type'), cTID('BanW'), desc3);
    desc1.putObject(cTID('Usng'), cTID('AdjL'), desc2);
    executeAction(cTID('Mk  '), desc1, dialogMode);
  };

BEPS.Layer_NewAdjustmentLayer_AddBrightnessContrast = function(enabled, withDialog){ //RETURN Nothing - Creates a new Brightness / Contrast adjustment layer
//enabled = boolean: false = skip this action
//withDialog = boolean: true will show the dialog (if enabled == false then the dialog does not show anyway)
    if (enabled != undefined && !enabled)
      return;
    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);
    var desc1 = new ActionDescriptor();
    var ref1 = new ActionReference();
    ref1.putClass(cTID('AdjL'));
    desc1.putReference(cTID('null'), ref1);
    var desc2 = new ActionDescriptor();
    desc2.putEnumerated(cTID('Clr '), cTID('Clr '), cTID('Gry '));
    var desc3 = new ActionDescriptor();
    desc3.putBoolean(sTID("useLegacy"), false);
    desc2.putObject(cTID('Type'), cTID('BrgC'), desc3);
    desc1.putObject(cTID('Usng'), cTID('AdjL'), desc2);
    executeAction(cTID('Mk  '), desc1, dialogMode);
  };

BEPS.Layer_NewAdjustmentLayer_AddHueSaturation = function(enabled, withDialog){ //RETURN Nothing - Creates a new Hue / Saturation adjustment layer
    if (enabled != undefined && !enabled)
      return;
    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);
    var desc1 = new ActionDescriptor();
    var ref1 = new ActionReference();
    ref1.putClass(cTID('AdjL'));
    desc1.putReference(cTID('null'), ref1);
    var desc2 = new ActionDescriptor();
    var desc3 = new ActionDescriptor();
    desc3.putEnumerated(sTID("presetKind"), sTID("presetKindType"), sTID("presetKindDefault"));
    desc3.putBoolean(cTID('Clrz'), false);
    desc2.putObject(cTID('Type'), cTID('HStr'), desc3);
    desc1.putObject(cTID('Usng'), cTID('AdjL'), desc2);
    executeAction(cTID('Mk  '), desc1, dialogMode);
  };  
  
BEPS.Layer_NewAdjustmentLayer_AddLevels = function(enabled, withDialog){ //RETURN Nothing - Creates a new levels adjustment layer
//enabled = boolean: false = skip this action
//withDialog = boolean: true will show the dialog (if enabled == false then the dialog does not show anyway)
  if (enabled != undefined && !enabled)
      return;
    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);
    var desc1 = new ActionDescriptor();
    var ref1 = new ActionReference();
    ref1.putClass(cTID('AdjL'));
    desc1.putReference(cTID('null'), ref1);
    var desc2 = new ActionDescriptor();
    var desc3 = new ActionDescriptor();
    desc3.putEnumerated(sTID("presetKind"), sTID("presetKindType"), sTID("presetKindDefault"));
    desc2.putObject(cTID('Type'), cTID('Lvls'), desc3);
    desc1.putObject(cTID('Usng'), cTID('AdjL'), desc2);
    executeAction(cTID('Mk  '), desc1, dialogMode);
  };

BEPS.Layer_NewAdjustmentLayer_AddGradientMap = function(enabled, withDialog){ //RETURN Nothing - Creates a new Gradient Map adjustment layer
//enabled = boolean: false = skip this action
//withDialog = boolean: true will show the dialog (if enabled == false then the dialog does not show anyway)
  if (enabled != undefined && !enabled)
      return;
    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);
    var desc1 = new ActionDescriptor();
    var ref1 = new ActionReference();
    ref1.putClass(cTID('AdjL'));
    desc1.putReference(cTID('null'), ref1);
    var desc2 = new ActionDescriptor();
    desc2.putEnumerated(cTID('Clr '), cTID('Clr '), cTID('Gry '));
    var desc3 = new ActionDescriptor();
    var desc4 = new ActionDescriptor();
    desc4.putString(cTID('Nm  '), "Foreground to Background");
    desc4.putEnumerated(cTID('GrdF'), cTID('GrdF'), cTID('CstS'));
    desc4.putDouble(cTID('Intr'), 4096);
    var list1 = new ActionList();
    var desc5 = new ActionDescriptor();
    var desc6 = new ActionDescriptor();
    desc6.putDouble(cTID('Rd  '), 0);
    desc6.putDouble(cTID('Grn '), 0);
    desc6.putDouble(cTID('Bl  '), 0);
    desc5.putObject(cTID('Clr '), sTID("RGBColor"), desc6);
    desc5.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc5.putInteger(cTID('Lctn'), 0);
    desc5.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc5);
    var desc7 = new ActionDescriptor();
    var desc8 = new ActionDescriptor();
    desc8.putDouble(cTID('Rd  '), 255);
    desc8.putDouble(cTID('Grn '), 255);
    desc8.putDouble(cTID('Bl  '), 255);
    desc7.putObject(cTID('Clr '), sTID("RGBColor"), desc8);
    desc7.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc7.putInteger(cTID('Lctn'), 4096);
    desc7.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc7);
    desc4.putList(cTID('Clrs'), list1);
    var list2 = new ActionList();
    var desc9 = new ActionDescriptor();
    desc9.putUnitDouble(cTID('Opct'), cTID('#Prc'), 100);
    desc9.putInteger(cTID('Lctn'), 0);
    desc9.putInteger(cTID('Mdpn'), 50);
    list2.putObject(cTID('TrnS'), desc9);
    var desc10 = new ActionDescriptor();
    desc10.putUnitDouble(cTID('Opct'), cTID('#Prc'), 100);
    desc10.putInteger(cTID('Lctn'), 4096);
    desc10.putInteger(cTID('Mdpn'), 50);
    list2.putObject(cTID('TrnS'), desc10);
    desc4.putList(cTID('Trns'), list2);
    desc3.putObject(cTID('Grad'), cTID('Grdn'), desc4);
    desc2.putObject(cTID('Type'), cTID('GdMp'), desc3);
    desc1.putObject(cTID('Usng'), cTID('AdjL'), desc2);
    executeAction(cTID('Mk  '), desc1, dialogMode);
  };


BEPS.Layer_LayerContentOptions_AdjustBrightnessContrast = function(iBrightness,iContrast,enabled, withDialog){//RETURN Nothing - Applies the Brightness and Contrast values to the active adjustment layer
//iBrightness = integer from -150 to 150
// iContrast = integer from -50 to 100
//enabled = boolean: false = skip this action
//withDialog = boolean: true will show the dialog (if enabled == false then the dialog does not show anyway) 
if(iBrightness === undefined)var iBrightness = 0 // -150 to 150
if(iContrast === undefined)var iContrast = 0 // -50 to 100

 if (enabled != undefined && !enabled)
      return;
    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);
    var desc1 = new ActionDescriptor();
    var ref1 = new ActionReference();
    ref1.putEnumerated(cTID('AdjL'), cTID('Ordn'), cTID('Trgt'));
    desc1.putReference(cTID('null'), ref1);
    var desc2 = new ActionDescriptor();
    desc2.putInteger(cTID('Brgh'), iBrightness);
    desc2.putInteger(cTID('Cntr'), iContrast);
    desc1.putObject(cTID('T   '), cTID('BrgC'), desc2);
    executeAction(cTID('setd'), desc1, dialogMode);
  };
BEPS.Layer_LayerContentOptions_AdjustHueSaturation = function(iHue, iSaturation, iLightness, enabled, withDialog){//RETURN Nothing - Applies the Hue, Saturation and Lightness values to the active adjustment layer
if(iHue === undefined)var iHue = 0 // -180 to 180
if(iSaturation === undefined)var iSaturation = 0 // -100 to 100
if(iLightness === undefined)var iLightness = 0 // -100 to 100
//enabled = boolean: false = skip this action
//withDialog = boolean: true will show the dialog (if enabled == false then the dialog does not show anyway) 
  if (enabled != undefined && !enabled)
      return;
    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);
    var desc1 = new ActionDescriptor();
    var ref1 = new ActionReference();
    ref1.putEnumerated(cTID('AdjL'), cTID('Ordn'), cTID('Trgt'));
    desc1.putReference(cTID('null'), ref1);
    var desc2 = new ActionDescriptor();
    desc2.putEnumerated(sTID("presetKind"), sTID("presetKindType"), sTID("presetKindCustom"));
    var list1 = new ActionList();
    var desc3 = new ActionDescriptor();
    desc3.putInteger(cTID('H   '), iHue);
    desc3.putInteger(cTID('Strt'), iSaturation);
    desc3.putInteger(cTID('Lght'), iLightness);
    list1.putObject(cTID('Hst2'), desc3);
    desc2.putList(cTID('Adjs'), list1);
    desc1.putObject(cTID('T   '), cTID('HStr'), desc2);
    executeAction(cTID('setd'), desc1, dialogMode);
  };

BEPS.Layer_LayerContentOptions_AdjustLevels = function(iShadowInput, dMidtoneInput, iHighlightInput, iShadowOutput, iHighlightOutput, enabled, withDialog){//RETURN Nothing - Applies the highlight output levels and shadow output levels to the active adjustment layer
/*USAGE:
BEPS.Layer_LayerContentOptions_AdjustLevels(null,null,null,0,128)
BEPS.Layer_LayerContentOptions_AdjustLevels(3, 4.19, 240, 0, 128)
*/
if(iShadowInput === undefined || iShadowInput === null)var iShadowInput = 0 // 0 to 253
if(dMidtoneInput === undefined || dMidtoneInput === null)var dMidtoneInput = 1.00 // 0.01 to 9.99
if(iHighlightInput === undefined || iHighlightInput === null)var iHighlightInput = 255 // 2 to 255
if(iShadowOutput === undefined || iShadowOutput === null)var iShadowOutput = 0 // 0 to 255
if(iHighlightOutput === undefined || iHighlightOutput === null)var iHighlightOutput = 255 // 0 to 255
//enabled = boolean: false = skip this action
//withDialog = boolean: true will show the dialog (if enabled == false then the dialog does not show anyway) 
    if (enabled != undefined && !enabled)
      return;
    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);
    var desc1 = new ActionDescriptor();
    var ref1 = new ActionReference();
    ref1.putEnumerated(cTID('AdjL'), cTID('Ordn'), cTID('Trgt'));
    desc1.putReference(cTID('null'), ref1);
    var desc2 = new ActionDescriptor();
    var list1 = new ActionList();
    var desc3 = new ActionDescriptor();
    var ref2 = new ActionReference();
    ref2.putEnumerated(cTID('Chnl'), cTID('Chnl'), cTID('Cmps'));
    desc3.putReference(cTID('Chnl'), ref2);
    var list2 = new ActionList();
    list2.putInteger(iShadowInput);
    list2.putInteger(iHighlightInput);
    desc3.putList(cTID('Inpt'), list2);
    desc3.putDouble(cTID('Gmm '), dMidtoneInput);
    var list3 = new ActionList();
    list3.putInteger(iShadowOutput);
    list3.putInteger(iHighlightOutput);
    desc3.putList(cTID('Otpt'), list3);
    list1.putObject(cTID('LvlA'), desc3);
    desc2.putList(cTID('Adjs'), list1);
    desc1.putObject(cTID('T   '), cTID('Lvls'), desc2);
    executeAction(cTID('setd'), desc1, dialogMode);

  };

BEPS.Layer_LayerContentOptions_CustomGradientMap_CD = function(enabled, withDialog){//RETURN Nothing - Applies the CD (Change Detection) gradient on the active gradient map layer
    if (enabled != undefined && !enabled)
      return;
    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);
    var desc1 = new ActionDescriptor();
    var ref1 = new ActionReference();
    ref1.putEnumerated(cTID('AdjL'), cTID('Ordn'), cTID('Trgt'));
    desc1.putReference(cTID('null'), ref1);
    var desc2 = new ActionDescriptor();
    var desc3 = new ActionDescriptor();
    desc3.putString(cTID('Nm  '), "Custom");
    desc3.putEnumerated(cTID('GrdF'), cTID('GrdF'), cTID('CstS'));
    desc3.putDouble(cTID('Intr'), 4096);
    var list1 = new ActionList();
    var desc4 = new ActionDescriptor();
    var desc5 = new ActionDescriptor();
    desc5.putDouble(cTID('Rd  '), 255);
    desc5.putDouble(cTID('Grn '), 0);
    desc5.putDouble(cTID('Bl  '), 0);
    desc4.putObject(cTID('Clr '), sTID("RGBColor"), desc5);
    desc4.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc4.putInteger(cTID('Lctn'), 0);
    desc4.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc4);
    var desc6 = new ActionDescriptor();
    var desc7 = new ActionDescriptor();
    desc7.putDouble(cTID('Rd  '), 255);
    desc7.putDouble(cTID('Grn '), 251.996154785156);
    desc7.putDouble(cTID('Bl  '), 0);
    desc6.putObject(cTID('Clr '), sTID("RGBColor"), desc7);
    desc6.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc6.putInteger(cTID('Lctn'), 1213);
    desc6.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc6);
    var desc8 = new ActionDescriptor();
    var desc9 = new ActionDescriptor();
    desc9.putDouble(cTID('Rd  '), 108.994445800781);
    desc9.putDouble(cTID('Grn '), 108.994445800781);
    desc9.putDouble(cTID('Bl  '), 108.994445800781);
    desc8.putObject(cTID('Clr '), sTID("RGBColor"), desc9);
    desc8.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc8.putInteger(cTID('Lctn'), 1970);
    desc8.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc8);
    var desc10 = new ActionDescriptor();
    var desc11 = new ActionDescriptor();
    desc11.putDouble(cTID('Rd  '), 108.994445800781);
    desc11.putDouble(cTID('Grn '), 108.994445800781);
    desc11.putDouble(cTID('Bl  '), 108.994445800781);
    desc10.putObject(cTID('Clr '), sTID("RGBColor"), desc11);
    desc10.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc10.putInteger(cTID('Lctn'), 2081);
    desc10.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc10);
    var desc12 = new ActionDescriptor();
    var desc13 = new ActionDescriptor();
    desc13.putDouble(cTID('Rd  '), 230.836944580078);
    desc13.putDouble(cTID('Grn '), 255);
    desc13.putDouble(cTID('Bl  '), 228.992614746094);
    desc12.putObject(cTID('Clr '), sTID("RGBColor"), desc13);
    desc12.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc12.putInteger(cTID('Lctn'), 2304);
    desc12.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc12);
    var desc14 = new ActionDescriptor();
    var desc15 = new ActionDescriptor();
    desc15.putDouble(cTID('Rd  '), 14.8947143554688);
    desc15.putDouble(cTID('Grn '), 190.993194580078);
    desc15.putDouble(cTID('Bl  '), 1.494140625);
    desc14.putObject(cTID('Clr '), sTID("RGBColor"), desc15);
    desc14.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc14.putInteger(cTID('Lctn'), 2705);
    desc14.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc14);
    var desc16 = new ActionDescriptor();
    var desc17 = new ActionDescriptor();
    desc17.putDouble(cTID('Rd  '), 6.14776611328125);
    desc17.putDouble(cTID('Grn '), 86.9947814941406);
    desc17.putDouble(cTID('Bl  '), 0);
    desc16.putObject(cTID('Clr '), sTID("RGBColor"), desc17);
    desc16.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc16.putInteger(cTID('Lctn'), 3640);
    desc16.putInteger(cTID('Mdpn'), 43);
    list1.putObject(cTID('Clrt'), desc16);
    desc3.putList(cTID('Clrs'), list1);
    var list2 = new ActionList();
    var desc18 = new ActionDescriptor();
    desc18.putUnitDouble(cTID('Opct'), cTID('#Prc'), 100);
    desc18.putInteger(cTID('Lctn'), 0);
    desc18.putInteger(cTID('Mdpn'), 50);
    list2.putObject(cTID('TrnS'), desc18);
    var desc19 = new ActionDescriptor();
    desc19.putUnitDouble(cTID('Opct'), cTID('#Prc'), 100);
    desc19.putInteger(cTID('Lctn'), 4096);
    desc19.putInteger(cTID('Mdpn'), 50);
    list2.putObject(cTID('TrnS'), desc19);
    desc3.putList(cTID('Trns'), list2);
    desc2.putObject(cTID('Grad'), cTID('Grdn'), desc3);
    desc1.putObject(cTID('T   '), cTID('GdMp'), desc2);
    executeAction(cTID('setd'), desc1, dialogMode);
  };

BEPS.Layer_LayerContentOptions_CustomGradientMap_FPAR = function(enabled, withDialog){//RETURN Nothing - Applies the FPAR gradient on the active gradient map layer
    if (enabled != undefined && !enabled)
      return;
    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);
    var desc1 = new ActionDescriptor();
    var ref1 = new ActionReference();
    ref1.putEnumerated(cTID('AdjL'), cTID('Ordn'), cTID('Trgt'));
    desc1.putReference(cTID('null'), ref1);
    var desc2 = new ActionDescriptor();
    var desc3 = new ActionDescriptor();
    desc3.putString(cTID('Nm  '), "Custom");
    desc3.putEnumerated(cTID('GrdF'), cTID('GrdF'), cTID('CstS'));
    desc3.putDouble(cTID('Intr'), 4096);
    var list1 = new ActionList();
    var desc4 = new ActionDescriptor();
    var desc5 = new ActionDescriptor();
    desc5.putDouble(cTID('Rd  '), 0);
    desc5.putDouble(cTID('Grn '), 0);
    desc5.putDouble(cTID('Bl  '), 0);
    desc4.putObject(cTID('Clr '), sTID("RGBColor"), desc5);
    desc4.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc4.putInteger(cTID('Lctn'), 0);
    desc4.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc4);
    var desc6 = new ActionDescriptor();
    var desc7 = new ActionDescriptor();
    desc7.putDouble(cTID('Rd  '), 128.00000756979);
    desc7.putDouble(cTID('Grn '), 0);
    desc7.putDouble(cTID('Bl  '), 0);
    desc6.putObject(cTID('Clr '), sTID("RGBColor"), desc7);
    desc6.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc6.putInteger(cTID('Lctn'), 819);
    desc6.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc6);
    var desc8 = new ActionDescriptor();
    var desc9 = new ActionDescriptor();
    desc9.putDouble(cTID('Rd  '), 163.997497558594);
    desc9.putDouble(cTID('Grn '), 101.142425537109);
    desc9.putDouble(cTID('Bl  '), 27.0112609863281);
    desc8.putObject(cTID('Clr '), sTID("RGBColor"), desc9);
    desc8.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc8.putInteger(cTID('Lctn'), 819);
    desc8.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc8);
    var desc10 = new ActionDescriptor();
    var desc11 = new ActionDescriptor();
    desc11.putDouble(cTID('Rd  '), 163.997497558594);
    desc11.putDouble(cTID('Grn '), 101.142425537109);
    desc11.putDouble(cTID('Bl  '), 27.0112609863281);
    desc10.putObject(cTID('Clr '), sTID("RGBColor"), desc11);
    desc10.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc10.putInteger(cTID('Lctn'), 1229);
    desc10.putInteger(cTID('Mdpn'), 44);
    list1.putObject(cTID('Clrt'), desc10);
    var desc12 = new ActionDescriptor();
    var desc13 = new ActionDescriptor();
    desc13.putDouble(cTID('Rd  '), 255);
    desc13.putDouble(cTID('Grn '), 174.000004827976);
    desc13.putDouble(cTID('Bl  '), 0);
    desc12.putObject(cTID('Clr '), sTID("RGBColor"), desc13);
    desc12.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc12.putInteger(cTID('Lctn'), 1229);
    desc12.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc12);
    var desc14 = new ActionDescriptor();
    var desc15 = new ActionDescriptor();
    desc15.putDouble(cTID('Rd  '), 255);
    desc15.putDouble(cTID('Grn '), 174.000004827976);
    desc15.putDouble(cTID('Bl  '), 0);
    desc14.putObject(cTID('Clr '), sTID("RGBColor"), desc15);
    desc14.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc14.putInteger(cTID('Lctn'), 1638);
    desc14.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc14);
    var desc16 = new ActionDescriptor();
    var desc17 = new ActionDescriptor();
    desc17.putDouble(cTID('Rd  '), 255);
    desc17.putDouble(cTID('Grn '), 245.996246337891);
    desc17.putDouble(cTID('Bl  '), 0);
    desc16.putObject(cTID('Clr '), sTID("RGBColor"), desc17);
    desc16.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc16.putInteger(cTID('Lctn'), 1638);
    desc16.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc16);
    var desc18 = new ActionDescriptor();
    var desc19 = new ActionDescriptor();
    desc19.putDouble(cTID('Rd  '), 255);
    desc19.putDouble(cTID('Grn '), 245.996246337891);
    desc19.putDouble(cTID('Bl  '), 0);
    desc18.putObject(cTID('Clr '), sTID("RGBColor"), desc19);
    desc18.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc18.putInteger(cTID('Lctn'), 2048);
    desc18.putInteger(cTID('Mdpn'), 53);
    list1.putObject(cTID('Clrt'), desc18);
    var desc20 = new ActionDescriptor();
    var desc21 = new ActionDescriptor();
    desc21.putDouble(cTID('Rd  '), 226.167755126953);
    desc21.putDouble(cTID('Grn '), 255);
    desc21.putDouble(cTID('Bl  '), 184.985504150391);
    desc20.putObject(cTID('Clr '), sTID("RGBColor"), desc21);
    desc20.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc20.putInteger(cTID('Lctn'), 2048);
    desc20.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc20);
    var desc22 = new ActionDescriptor();
    var desc23 = new ActionDescriptor();
    desc23.putDouble(cTID('Rd  '), 226.167755126953);
    desc23.putDouble(cTID('Grn '), 255);
    desc23.putDouble(cTID('Bl  '), 184.985504150391);
    desc22.putObject(cTID('Clr '), sTID("RGBColor"), desc23);
    desc22.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc22.putInteger(cTID('Lctn'), 2458);
    desc22.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc22);
    var desc24 = new ActionDescriptor();
    var desc25 = new ActionDescriptor();
    desc25.putDouble(cTID('Rd  '), 0);
    desc25.putDouble(cTID('Grn '), 255);
    desc25.putDouble(cTID('Bl  '), 41.8287938833237);
    desc24.putObject(cTID('Clr '), sTID("RGBColor"), desc25);
    desc24.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc24.putInteger(cTID('Lctn'), 2458);
    desc24.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc24);
    var desc26 = new ActionDescriptor();
    var desc27 = new ActionDescriptor();
    desc27.putDouble(cTID('Rd  '), 0);
    desc27.putDouble(cTID('Grn '), 255);
    desc27.putDouble(cTID('Bl  '), 41.8287938833237);
    desc26.putObject(cTID('Clr '), sTID("RGBColor"), desc27);
    desc26.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc26.putInteger(cTID('Lctn'), 2867);
    desc26.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc26);
    var desc28 = new ActionDescriptor();
    var desc29 = new ActionDescriptor();
    desc29.putDouble(cTID('Rd  '), 0);
    desc29.putDouble(cTID('Grn '), 187.000004053116);
    desc29.putDouble(cTID('Bl  '), 30.6926079466939);
    desc28.putObject(cTID('Clr '), sTID("RGBColor"), desc29);
    desc28.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc28.putInteger(cTID('Lctn'), 2867);
    desc28.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc28);
    var desc30 = new ActionDescriptor();
    var desc31 = new ActionDescriptor();
    desc31.putDouble(cTID('Rd  '), 0);
    desc31.putDouble(cTID('Grn '), 187.000004053116);
    desc31.putDouble(cTID('Bl  '), 30.6926079466939);
    desc30.putObject(cTID('Clr '), sTID("RGBColor"), desc31);
    desc30.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc30.putInteger(cTID('Lctn'), 3277);
    desc30.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc30);
    var desc32 = new ActionDescriptor();
    var desc33 = new ActionDescriptor();
    desc33.putDouble(cTID('Rd  '), 0);
    desc33.putDouble(cTID('Grn '), 125.000000149012);
    desc33.putDouble(cTID('Bl  '), 20.5252921208739);
    desc32.putObject(cTID('Clr '), sTID("RGBColor"), desc33);
    desc32.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc32.putInteger(cTID('Lctn'), 3277);
    desc32.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc32);
    var desc34 = new ActionDescriptor();
    var desc35 = new ActionDescriptor();
    desc35.putDouble(cTID('Rd  '), 0);
    desc35.putDouble(cTID('Grn '), 125.000000149012);
    desc35.putDouble(cTID('Bl  '), 20.5252921208739);
    desc34.putObject(cTID('Clr '), sTID("RGBColor"), desc35);
    desc34.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc34.putInteger(cTID('Lctn'), 3686);
    desc34.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc34);
    var desc36 = new ActionDescriptor();
    var desc37 = new ActionDescriptor();
    desc37.putDouble(cTID('Rd  '), 0);
    desc37.putDouble(cTID('Grn '), 76.0000030696392);
    desc37.putDouble(cTID('Bl  '), 12.4708168208599);
    desc36.putObject(cTID('Clr '), sTID("RGBColor"), desc37);
    desc36.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc36.putInteger(cTID('Lctn'), 3695);
    desc36.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc36);
    var desc38 = new ActionDescriptor();
    var desc39 = new ActionDescriptor();
    desc39.putDouble(cTID('Rd  '), 0);
    desc39.putDouble(cTID('Grn '), 76.0000030696392);
    desc39.putDouble(cTID('Bl  '), 12.4708168208599);
    desc38.putObject(cTID('Clr '), sTID("RGBColor"), desc39);
    desc38.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc38.putInteger(cTID('Lctn'), 4014);
    desc38.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc38);
    var desc40 = new ActionDescriptor();
    var desc41 = new ActionDescriptor();
    desc41.putDouble(cTID('Rd  '), 0);
    desc41.putDouble(cTID('Grn '), 42.9954528808594);
    desc41.putDouble(cTID('Bl  '), 7.05825805664063);
    desc40.putObject(cTID('Clr '), sTID("RGBColor"), desc41);
    desc40.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc40.putInteger(cTID('Lctn'), 4014);
    desc40.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc40);
    var desc42 = new ActionDescriptor();
    var desc43 = new ActionDescriptor();
    desc43.putDouble(cTID('Rd  '), 0);
    desc43.putDouble(cTID('Grn '), 42.9954528808594);
    desc43.putDouble(cTID('Bl  '), 7.05825805664063);
    desc42.putObject(cTID('Clr '), sTID("RGBColor"), desc43);
    desc42.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc42.putInteger(cTID('Lctn'), 4096);
    desc42.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc42);
    desc3.putList(cTID('Clrs'), list1);
    var list2 = new ActionList();
    var desc44 = new ActionDescriptor();
    desc44.putUnitDouble(cTID('Opct'), cTID('#Prc'), 100);
    desc44.putInteger(cTID('Lctn'), 0);
    desc44.putInteger(cTID('Mdpn'), 50);
    list2.putObject(cTID('TrnS'), desc44);
    var desc45 = new ActionDescriptor();
    desc45.putUnitDouble(cTID('Opct'), cTID('#Prc'), 100);
    desc45.putInteger(cTID('Lctn'), 4096);
    desc45.putInteger(cTID('Mdpn'), 50);
    list2.putObject(cTID('TrnS'), desc45);
    desc3.putList(cTID('Trns'), list2);
    desc2.putObject(cTID('Grad'), cTID('Grdn'), desc3);
    desc1.putObject(cTID('T   '), cTID('GdMp'), desc2);
    executeAction(cTID('setd'), desc1, dialogMode);
  };

BEPS.Layer_LayerContentOptions_CustomGradientMap_NDVI = function(enabled, withDialog){//RETURN NoBEPS.Layer_NewAdjustmentLayer_AddBrightnessContrast = function(enabled, withDialog){ //RETURN Nothing - Creates a new Brightness / Contrast adjustment layerthing - Applies the NDVI gradient on the active gradient map layer
//INPUT: make sure that the active layer is a gradent map layer (not tested)
//enabled = boolean: false = skip this action
//withDialog = boolean: true will show the dialog (if enabled == false then the dialog does not show anyway)
    if (enabled != undefined && !enabled)
      return;
    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);
    var desc1 = new ActionDescriptor();
    var ref1 = new ActionReference();
    ref1.putEnumerated(cTID('AdjL'), cTID('Ordn'), cTID('Trgt'));
    desc1.putReference(cTID('null'), ref1);
    var desc2 = new ActionDescriptor();
    var desc3 = new ActionDescriptor();
    desc3.putString(cTID('Nm  '), "Custom");
    desc3.putEnumerated(cTID('GrdF'), cTID('GrdF'), cTID('CstS'));
    desc3.putDouble(cTID('Intr'), 4096);
    var list1 = new ActionList();
    var desc4 = new ActionDescriptor();
    var desc5 = new ActionDescriptor();
    desc5.putDouble(cTID('Rd  '), 0);
    desc5.putDouble(cTID('Grn '), 6.03891050443053);
    desc5.putDouble(cTID('Bl  '), 255);
    desc4.putObject(cTID('Clr '), sTID("RGBColor"), desc5);
    desc4.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc4.putInteger(cTID('Lctn'), 545);
    desc4.putInteger(cTID('Mdpn'), 35);
    list1.putObject(cTID('Clrt'), desc4);
    var desc6 = new ActionDescriptor();
    var desc7 = new ActionDescriptor();
    desc7.putDouble(cTID('Rd  '), 0);
    desc7.putDouble(cTID('Grn '), 0);
    desc7.putDouble(cTID('Bl  '), 0);
    desc6.putObject(cTID('Clr '), sTID("RGBColor"), desc7);
    desc6.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc6.putInteger(cTID('Lctn'), 2059);
    desc6.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc6);
    var desc8 = new ActionDescriptor();
    var desc9 = new ActionDescriptor();
    desc9.putDouble(cTID('Rd  '), 255);
    desc9.putDouble(cTID('Grn '), 255);
    desc9.putDouble(cTID('Bl  '), 255);
    desc8.putObject(cTID('Clr '), sTID("RGBColor"), desc9);
    desc8.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc8.putInteger(cTID('Lctn'), 2404);
    desc8.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc8);
    var desc10 = new ActionDescriptor();
    var desc11 = new ActionDescriptor();
    desc11.putDouble(cTID('Rd  '), 255);
    desc11.putDouble(cTID('Grn '), 0);
    desc11.putDouble(cTID('Bl  '), 0);
    desc10.putObject(cTID('Clr '), sTID("RGBColor"), desc11);
    desc10.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc10.putInteger(cTID('Lctn'), 2660);
    desc10.putInteger(cTID('Mdpn'), 60);
    list1.putObject(cTID('Clrt'), desc10);
    var desc12 = new ActionDescriptor();
    var desc13 = new ActionDescriptor();
    desc13.putDouble(cTID('Rd  '), 119.998168945313);
    desc13.putDouble(cTID('Grn '), 64.9406433105469);
    desc13.putDouble(cTID('Bl  '), 0);
    desc12.putObject(cTID('Clr '), sTID("RGBColor"), desc13);
    desc12.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc12.putInteger(cTID('Lctn'), 2849);
    desc12.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc12);
    var desc14 = new ActionDescriptor();
    var desc15 = new ActionDescriptor();
    desc15.putDouble(cTID('Rd  '), 179.997253417969);
    desc15.putDouble(cTID('Grn '), 163.904113769531);
    desc15.putDouble(cTID('Bl  '), 107.998352050781);
    desc14.putObject(cTID('Clr '), sTID("RGBColor"), desc15);
    desc14.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc14.putInteger(cTID('Lctn'), 3094);
    desc14.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc14);
    var desc16 = new ActionDescriptor();
    var desc17 = new ActionDescriptor();
    desc17.putDouble(cTID('Rd  '), 148.573608398438);
    desc17.putDouble(cTID('Grn '), 255);
    desc17.putDouble(cTID('Bl  '), 145.997772216797);
    desc16.putObject(cTID('Clr '), sTID("RGBColor"), desc17);
    desc16.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc16.putInteger(cTID('Lctn'), 3417);
    desc16.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc16);
    var desc18 = new ActionDescriptor();
    var desc19 = new ActionDescriptor();
    desc19.putDouble(cTID('Rd  '), 0);
    desc19.putDouble(cTID('Grn '), 77.9988098144531);
    desc19.putDouble(cTID('Bl  '), 12.8324890136719);
    desc18.putObject(cTID('Clr '), sTID("RGBColor"), desc19);
    desc18.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc18.putInteger(cTID('Lctn'), 3684);
    desc18.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc18);
    desc3.putList(cTID('Clrs'), list1);
    var list2 = new ActionList();
    var desc20 = new ActionDescriptor();
    desc20.putUnitDouble(cTID('Opct'), cTID('#Prc'), 0);
    desc20.putInteger(cTID('Lctn'), 0);
    desc20.putInteger(cTID('Mdpn'), 50);
    list2.putObject(cTID('TrnS'), desc20);
    var desc21 = new ActionDescriptor();
    desc21.putUnitDouble(cTID('Opct'), cTID('#Prc'), 100);
    desc21.putInteger(cTID('Lctn'), 0);
    desc21.putInteger(cTID('Mdpn'), 70);
    list2.putObject(cTID('TrnS'), desc21);
    var desc22 = new ActionDescriptor();
    desc22.putUnitDouble(cTID('Opct'), cTID('#Prc'), 100);
    desc22.putInteger(cTID('Lctn'), 4096);
    desc22.putInteger(cTID('Mdpn'), 50);
    list2.putObject(cTID('TrnS'), desc22);
    desc3.putList(cTID('Trns'), list2);
    desc2.putObject(cTID('Grad'), cTID('Grdn'), desc3);
    desc1.putObject(cTID('T   '), cTID('GdMp'), desc2);
    executeAction(cTID('setd'), desc1, dialogMode);
  };
BEPS.Layer_LayerContentOptions_CustomGradientMap_NDVIHD = function(enabled, withDialog){//RETURN Nothing - Applies the NDVIHD gradient on the active gradient map layer
    if (enabled != undefined && !enabled)
      return;
    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);
    var desc1 = new ActionDescriptor();
    var ref1 = new ActionReference();
    ref1.putEnumerated(cTID('AdjL'), cTID('Ordn'), cTID('Trgt'));
    desc1.putReference(cTID('null'), ref1);
    var desc2 = new ActionDescriptor();
    var desc3 = new ActionDescriptor();
    desc3.putString(cTID('Nm  '), "Custom");
    desc3.putEnumerated(cTID('GrdF'), cTID('GrdF'), cTID('CstS'));
    desc3.putDouble(cTID('Intr'), 4096);
    var list1 = new ActionList();
    var desc4 = new ActionDescriptor();
    var desc5 = new ActionDescriptor();
    desc5.putDouble(cTID('Rd  '), 255);
    desc5.putDouble(cTID('Grn '), 0);
    desc5.putDouble(cTID('Bl  '), 0);
    desc4.putObject(cTID('Clr '), sTID("RGBColor"), desc5);
    desc4.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc4.putInteger(cTID('Lctn'), 0);
    desc4.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc4);
    var desc6 = new ActionDescriptor();
    var desc7 = new ActionDescriptor();
    desc7.putDouble(cTID('Rd  '), 163.997497558594);
    desc7.putDouble(cTID('Grn '), 101.142425537109);
    desc7.putDouble(cTID('Bl  '), 27.0112609863281);
    desc6.putObject(cTID('Clr '), sTID("RGBColor"), desc7);
    desc6.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc6.putInteger(cTID('Lctn'), 835);
    desc6.putInteger(cTID('Mdpn'), 44);
    list1.putObject(cTID('Clrt'), desc6);
    var desc8 = new ActionDescriptor();
    var desc9 = new ActionDescriptor();
    desc9.putDouble(cTID('Rd  '), 255);
    desc9.putDouble(cTID('Grn '), 245.996246337891);
    desc9.putDouble(cTID('Bl  '), 0);
    desc8.putObject(cTID('Clr '), sTID("RGBColor"), desc9);
    desc8.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc8.putInteger(cTID('Lctn'), 1569);
    desc8.putInteger(cTID('Mdpn'), 53);
    list1.putObject(cTID('Clrt'), desc8);
    var desc10 = new ActionDescriptor();
    var desc11 = new ActionDescriptor();
    desc11.putDouble(cTID('Rd  '), 226.167755126953);
    desc11.putDouble(cTID('Grn '), 255);
    desc11.putDouble(cTID('Bl  '), 184.985504150391);
    desc10.putObject(cTID('Clr '), sTID("RGBColor"), desc11);
    desc10.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc10.putInteger(cTID('Lctn'), 1787);
    desc10.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc10);
    var desc12 = new ActionDescriptor();
    var desc13 = new ActionDescriptor();
    desc13.putDouble(cTID('Rd  '), 0);
    desc13.putDouble(cTID('Grn '), 151.997680664063);
    desc13.putDouble(cTID('Bl  '), 24.9879455566406);
    desc12.putObject(cTID('Clr '), sTID("RGBColor"), desc13);
    desc12.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc12.putInteger(cTID('Lctn'), 3086);
    desc12.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc12);
    var desc14 = new ActionDescriptor();
    var desc15 = new ActionDescriptor();
    desc15.putDouble(cTID('Rd  '), 0);
    desc15.putDouble(cTID('Grn '), 42.9954528808594);
    desc15.putDouble(cTID('Bl  '), 7.05825805664063);
    desc14.putObject(cTID('Clr '), sTID("RGBColor"), desc15);
    desc14.putEnumerated(cTID('Type'), cTID('Clry'), cTID('UsrS'));
    desc14.putInteger(cTID('Lctn'), 4096);
    desc14.putInteger(cTID('Mdpn'), 50);
    list1.putObject(cTID('Clrt'), desc14);
    desc3.putList(cTID('Clrs'), list1);
    var list2 = new ActionList();
    var desc16 = new ActionDescriptor();
    desc16.putUnitDouble(cTID('Opct'), cTID('#Prc'), 100);
    desc16.putInteger(cTID('Lctn'), 0);
    desc16.putInteger(cTID('Mdpn'), 50);
    list2.putObject(cTID('TrnS'), desc16);
    var desc17 = new ActionDescriptor();
    desc17.putUnitDouble(cTID('Opct'), cTID('#Prc'), 100);
    desc17.putInteger(cTID('Lctn'), 4096);
    desc17.putInteger(cTID('Mdpn'), 50);
    list2.putObject(cTID('TrnS'), desc17);
    desc3.putList(cTID('Trns'), list2);
    desc2.putObject(cTID('Grad'), cTID('Grdn'), desc3);
    desc1.putObject(cTID('T   '), cTID('GdMp'), desc2);
    executeAction(cTID('setd'), desc1, dialogMode);
  };





//Filter - Menu Functions
BEPS.Filter_BlueEarth_NDVI = function(enabled, withDialog){ //RETURN Nothing: Converts active layer to NDVI 
//the sTID(####) requires the plugin  "NDVI64 - v1.1.8bf" 11/23/2009
//enabled = boolean: false = skip this action
//withDialog = boolean: true will show the dialog (if enabled == false then the dialog does not show anyway)
    if (enabled != undefined && !enabled)
      return;
    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);
    var desc1 = new ActionDescriptor();
    desc1.putUnitDouble(cTID('Amnt'), cTID('#Prc'), 50);
    desc1.putEnumerated(cTID('NDVI'), cTID('mooD'), cTID('moD1'));
    executeAction(sTID('546ce5b0-b879-11de-8a39-0800200c9a66'), desc1, dialogMode);
}
BEPS.Filter_BlueEarth_NDVIHD = function(enabled, withDialog){ //RETURN Nothing: Converts active layer to NDVI HD
//the sTID(####) requires the plugin  "NDVIHD64 - v1.1.8bf" 11/23/2009
//enabled = boolean: false = skip this action
//withDialog = boolean: true will show the dialog (if enabled == false then the dialog does not show anyway)
    if (enabled != undefined && !enabled)
      return;
    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);
    var desc1 = new ActionDescriptor();
    desc1.putUnitDouble(cTID('Amnt'), cTID('#Prc'), 50);
    desc1.putEnumerated(cTID('NDVH'), cTID('mooD'), cTID('moD1'));
    executeAction(sTID('38dc0a90-b876-11de-8a39-0800200c9a66'), desc1, dialogMode);
}
//View - Menu Functions
BEPS.View_NewGuide = function(nPixels, sOrientation, enabled, withDialog){//RETURN: nothing - creates a horizontal or vertical layer guide
//nPixels = 0 to n : creates a layer guide at this set number of pixels
//sOrientation = 'vertical' , 'vert' , 'v' , 'horizontal' , 'hrzn' , h : creates a vertical or horizontal layer guide.  If the first character is 'h' then the horizontal guide is created.  All other characters will create a vertical guide

if(nPixels === undefined || nPixels === null)var nPixels= 0  
if(sOrientation === undefined || sOrientation === null)var sOrientation= "v"
sOrientation = (BECS.sLeft(sOrientation,1) == "h") ?  'Hrzn' : 'Vrtc'

    if (enabled != undefined && !enabled)
      return;
    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);
    var desc1 = new ActionDescriptor();
    var desc2 = new ActionDescriptor();
    desc2.putUnitDouble(cTID('Pstn'), cTID('#Pxl'), nPixels);
    desc2.putEnumerated(cTID('Ornt'), cTID('Ornt'), cTID(sOrientation));
    desc1.putObject(cTID('Nw  '), cTID('Gd  '), desc2);
    executeAction(cTID('Mk  '), desc1, dialogMode);
  };


//Panels============================
BEPS.Navigator_SetZoom = function setZoom( nZoom ) {//RETURN nothing
    // as percent
    //USAGE BEPS.Navigator_SetZoom( .85 )
    if(nZoom === undefined || nZoom === null)var nZoom = 1 // 0 to 100 where 100 = 100% ; .5 = .5%
   cTID = function(s) { return app.charIDToTypeID(s); }; // from xbytor
   var docRes = activeDocument.resolution;
   activeDocument.resizeImage( undefined, undefined, 72/(nZoom/100), ResampleMethod.NONE );
   var desc = new ActionDescriptor(); 
   var ref = new ActionReference(); 
   ref.putEnumerated( cTID( "Mn  " ), cTID( "MnIt" ), cTID( 'PrnS' ) ); 
   desc.putReference( cTID( "null" ), ref ); 
   executeAction( cTID( "slct" ), desc, DialogModes.NO );
   activeDocument.resizeImage( undefined, undefined, docRes, ResampleMethod.NONE );
}


//Panel Layers object functions
BEPS.Layers_ActivateByIndex = function(snLayerSetIndex, snArtLayersIndex){ //RETURN Nothing - activates a particular artlayer by its index can be a number or string
//BEPS.Layers.SelectByName can be used if you want to activate and select a layer.  This function will activate a layer without changing the layer 'selection'.
//snLayerSetIndex = integer of LayerSets or string ex "CIR"
//snArtLayersIndex = integer of artlayer or name
srcDoc.activeLayer = srcDoc.layerSets[snLayerSetIndex].artLayers[snArtLayersIndex];}  
   
BEPS.Layers_ByNameSelectMultiple = function(aLayerNames) { //RETURN - in photoshop this array of layer names will be selected
//aLayerNames = ["Layer1","Layer2","testName"]
    var layers = new Array();
    var id54 = charIDToTypeID( "slct" );
    var desc12 = new ActionDescriptor();
    var id55 = charIDToTypeID( "null" );
    var ref9 = new ActionReference();
    for (var i = 0; i < aLayerNames.length; i++) {
        layers[i] = charIDToTypeID( "Lyr " );
        ref9.putName(layers[i], aLayerNames[i]);
    }
    desc12.putReference( id55, ref9 );
    var id58 = charIDToTypeID( "MkVs" );
    desc12.putBoolean( id58, false );
    executeAction( id54, desc12, DialogModes.NO );
};
BEPS.Layers_CountAll = function(psDoc,nTotalProgress) { //RETURN: number (recursive function to count all layers and Layersets in a document) PARAMETERS (psDoc: Photoshop document || nTotalProgress: (for internal functional use only) USEAGE: BEPS.Layers_CountAll(newDoc)
if ( nTotalProgress == undefined ) nTotalProgress = 0
	nTotalProgress+= psDoc.artLayers.length; //in the sLayerSetName count the artLayers
    for( var i = 0; i < psDoc.layerSets.length; i++) {
        nTotalProgress++; //count the sLayerSetName itself
      nTotalProgress = BEPS.Layers_CountAll(psDoc.layerSets[i],nTotalProgress);  // recursive call to layerCounter to count the artLayers inside it
    }
   return nTotalProgress;
}

BEPS.Layers_DuplicateIntoTargetDoc = function(psDoc) { //RETURN: nothing (duplicates selected layers into psDoc) PARAMETERS:(psDoc: Photoshop Document )  USEAGE: BEPS.Layers_DuplicateIntoTargetDoc(newDoc)
//psDoc = target document
    var id287 = charIDToTypeID( "Dplc" );
		var desc69 = new ActionDescriptor();
		var id288 = charIDToTypeID( "null" );
		var ref63 = new ActionReference();
		var id289 = charIDToTypeID( "Lyr " );
		var id290 = charIDToTypeID( "Ordn" );
		var id291 = charIDToTypeID( "Trgt" );
		ref63.putEnumerated( id289, id290, id291 );
		desc69.putReference( id288, ref63 );
		var id292 = charIDToTypeID( "T   " );
		var ref64 = new ActionReference();
		var id293 = charIDToTypeID( "Dcmn" );
		ref64.putName( id293, psDoc.name );
		desc69.putReference( id292, ref64 );
		var id294 = charIDToTypeID( "Vrsn" );
		desc69.putInteger( id294, 2 );
		executeAction( id287, desc69, DialogModes.NO );
	}


BEPS.Layers_DuplicateIntoTargetLayerset = function (snLayerSetIndex,snArtLayersIndex,sTargetLayerset){//RETURN Nothing: Duplicates the layer 'snArtLayersIndex' into the layerset sTargetLayerset
//snLayerSetIndex = integer of LayerSets or string ex "CIR"
//snArtLayersIndex = integer of artlayer or name
  srcDoc.layerSets[snLayerSetIndex].artLayers[snArtLayersIndex].duplicate(srcDoc.layerSets[sTargetLayerset])}

BEPS.Layers_aGetIndexesOfSelected = function () { //RETURN: array of integers of selected layers [1,2,5,7]
	var selectedLayers = new Array;
	var ref = new ActionReference();
	ref.putEnumerated(charIDToTypeID("Dcmn"), charIDToTypeID("Ordn"), charIDToTypeID("Trgt"));
	var desc = executeActionGet(ref);
	try {
		activeDocument.backgroundLayer;
		var mod = 1;
	} catch (e) {
		var mod = 0;
	}
	if (desc.hasKey(stringIDToTypeID('targetLayers'))) {
		desc = desc.getList(stringIDToTypeID('targetLayers'));
		var c = desc.count
		var selectedLayers = new Array();

		for (var i = 0; i < c; i++) {
			selectedLayers.push(desc.getReference(i).getIndex() + 1 - mod);
		}
	} else {
		var ref = new ActionReference();
		ref.putProperty(charIDToTypeID("Prpr"), charIDToTypeID("ItmI"));
		ref.putEnumerated(charIDToTypeID("Lyr "), charIDToTypeID("Ordn"), charIDToTypeID("Trgt"));
		selectedLayers.push(executeActionGet(ref).getInteger(charIDToTypeID("ItmI")) - mod);
	}
	return selectedLayers;
}
BEPS.Layers_LinkSelected = function(){//RETURN: nothing - This will link all selected layers together
    var res = false;
   try{
          var desc = new ActionDescriptor();
              var ref = new ActionReference();
              ref.putEnumerated( charIDToTypeID( "Lyr " ), charIDToTypeID( "Ordn" ), charIDToTypeID( "Trgt" ) );
          desc.putReference( charIDToTypeID( "null" ), ref );
      executeAction( stringIDToTypeID("linkSelectedLayers"), desc, DialogModes.NO );
      }
      catch(e) {
          if (e.match == 'Selected Layers.is currently available.'){
          }else throw e;
      };
   res = true
}


BEPS.Layers_LinkRemoveFromSelected = function(){
var res = false;
   try{
          var desc = new ActionDescriptor();
              var ref = new ActionReference();
              ref.putEnumerated( charIDToTypeID( "Lyr " ), charIDToTypeID( "Ordn" ), charIDToTypeID( "Trgt" ) );
          desc.putReference( charIDToTypeID( "null" ), ref );
      executeAction( stringIDToTypeID("unlinkSelectedLayers"), desc, DialogModes.NO );
      }
      catch(e) {
          if (e.match == 'Selected Layers.is currently available.'){
          }else throw e;
      };
   res = true 
    }


BEPS.Layers_LoadFilesInto = function(aFiles,bGroup,sName) {//RETURN: nothing (document with aFiles loaded as layersl.retains original layer structure) PARAMETERS (aFiles:1D array of aFiles || bGroup: true,false || sName: 'filename', 'analysisname'); USEAGE: BEPS.Layers_LoadFilesInto(aTempFiles,true,"analysisname")
//set units to pixels for resizing later
app.preferences.rulerUnits = Units.PIXELS
app.preferences.typeUnits = TypeUnits.PIXELS

//assign default values
if ( aFiles == undefined ) return;
if ( aFiles.length == undefined ) return;
if ( aFiles.length == 0 ) return;
if ( bGroup == undefined) {bGroup = true}
if ( sName == undefined) {sName = "filename"}

for ( var i = 0; i < aFiles.length; i++ ) {
	var newDoc = open(File(aFiles[i]));
	if (i==0) { var psDoc = app.activeDocument;}
  
	//move layers into target document
	BEPS.Layers_SelectAll(newDoc);
	if( i != 0) {
        if(sName.toLowerCase() == "rgbi"){ //make a 4band RGBI else copy all layers to the new ocument
            newDoc.changeMode(ChangeMode.GRAYSCALE)
            //app.activeDocument = psDoc
            newDoc.channels[0].duplicate(psDoc)
            app.activeDocument = psDoc
            psDoc.channels[3].name = "IR"
            }else{
        BEPS.Layers_DuplicateIntoTargetDoc(psDoc)}
    };


	//determine layer name
	var docSplit = aFiles[ i ].toString().split( "/" );
	var fileName = docSplit[ docSplit.length - 1 ];
    var aFileNoExt = fileName.split(".")
	var analysisSplit = fileName.split("_")
	switch (sName.toLowerCase()){
		case "filename":
            fName = fileName.split(".");
            var layerName = fName[0]
            break;
		case "analysisname":
            var layerName = analysisSplit[2]
            //psDoc.activeLayer.name = layerName
            break;
         case "rgbi":
            var layerName = analysisSplit[2]
            break;
         case "stitchtargets":
            //rename layers to something more meaningful in case the file does not stitch properly, a person can complete the process
            if (psDoc.layers[0].name == "CIR" || psDoc.layers[0].name == "RGB"){  //rename layers of CIR images
                var sCIRName = aFileNoExt[0]
                var sRGBName = aFileNoExt[0].replace("_CIR_","_RGB_")
                activeDocument = psDoc
                psDoc.activeLayer =  psDoc.layers["RGB"]  //(For some reason the  CIR layer will not rename unless the RGB layer is selected first)
                psDoc.layers["CIR"].name = sCIRName;
                psDoc.layers["RGB"].name = sRGBName;
                BEPS.Layers_ByNameSelectMultiple([sCIRName,sRGBName]) //necessary for grouping to work properly
            } else{
                activeDocument = psDoc
            }
 
            //prep for farther operations in this function
            BEPS.Layers_LinkSelected()  //link our layers to align CIR and RGB together
            var layerName = aFileNoExt[0]
            break;
	};

	//make document larger if necessary
	if(i !=0) {app.activeDocument = psDoc};
	if(newDoc.width > psDoc.width || newDoc.height > psDoc.height){
		var newWidth = newDoc.width > psDoc.width ? newDoc.width : psDoc.width
		var newHeight  = newDoc.height > psDoc.height ? newDoc.height : psDoc.height
		psDoc.resizeCanvas(newWidth, newHeight, AnchorPosition.TOPLEFT)
	}

	//Group document into LayerSetName
	if(bGroup == true /*&& BEPS.Layers_CountAll(newDoc) > 1*/){ //do not bGroup if there is only one layer in the source file
		var rename = psDoc.activeLayer.sName
		psDoc.activeLayer.sName = rename //these two lines will automatically unlock a background layer
		BEPS.LayerSet_SelectedLayersInto(layerName);
		//BEPS.LayerSet_Collapse(app.activeDocument.activeLayer)  //this usually adds "dummy layers" 
		}else{
			if (sName.toLowerCase() == "analysisname" || sName.toLowerCase() == "rgbi") psDoc.activeLayer.name = layerName;
		}
	if(i !=0) {BEPS.File_CloseWithoutDialogs(newDoc)}
	//if(i !=0) {newDoc.close(SaveOptions.DONOTSAVECHANGES)};			
	psDoc.activeLayer = psDoc.layers[0];
	}
}


BEPS.Layers_NewDocumentFromActive = function(psDoc,sNewDocName){//RETURN New Document Object - creates a new document with new file name from psDoc
//USAGE
//BEPS.Layers_NewDocumentFrom(app.activeDocument,'filename.jpg')
//Photoshop Document object 
//sNewDocName = new file name ('filename.jpg')
  sNewDocName = sNewDocName || ""; //assign an empty string if sNewDocName is undefined
  var newDoc = app.documents.add( srcDoc.width, srcDoc.height, srcDoc.resolution, sNewDocName ); 
  newDoc.activeLayer.isBackgroundLayer = false; 
  app.activeDocument = srcDoc; 
  activeDocument.activeLayer.duplicate( newDoc ); 
  app.activeDocument = newDoc
  return newDoc; 
} 
BEPS.Layers_Rename = function(snLayerSetIndex, snArtLayersIndex, sName){ //RETURN Nothing - Renames the 
//i = integer of LayerSets or string ex "CIR"
//j = integer of artlayer or name
//sName = string to rename the layer
srcDoc.layerSets[snLayerSetIndex].artLayers[snArtLayersIndex].name = sName}
BEPS.Layers_SelectAll = function(psDoc) { //RETURN: nothing (all layers will be selected in the document) PARAMETERS:(psDoc: Photoshop Document ) USEAGE: BEPS.Layers_SelectAll(newDoc)
		app.activeDocument = psDoc;
		psDoc.activeLayer = psDoc.layers[0];
		var id268 = charIDToTypeID( "slct" );
		var desc65 = new ActionDescriptor();
		var id269 = charIDToTypeID( "null" );
		var ref59 = new ActionReference();
		var id270 = charIDToTypeID( "Lyr " );
		// ref59.putName( id270, "Layer 1" );
		if ( psDoc.layers[psDoc.layers.length-1].isBackgroundLayer ) {
			ref59.putName( id270, localize( "$$$/LayersPalette/Base=Background" ) );
		} else {
			ref59.putIndex( id270, 1 );
		}
		desc65.putReference( id269, ref59 );
		var id271 = stringIDToTypeID( "selectionModifier" );
		var id272 = stringIDToTypeID( "selectionModifierType" );
		var id273 = stringIDToTypeID( "addToSelectionContinuous" );
		desc65.putEnumerated( id271, id272, id273 );
		var id274 = charIDToTypeID( "MkVs" );
		desc65.putBoolean( id274, false );
		executeAction( id268, desc65, DialogModes.NO );
	}


BEPS.Layers_SelectByIndex = function(iLayerIndex, bAddToSelection) { //RETURN nothing: selects layer by index with the option to add to selection
  //iLayerIndex = integer
  //bAddToSelection = boolean
	bAddToSelection == undefined ? bAddToSelection = false : bAddToSelection = true;
	var ref = new ActionReference();
	try {
		ref.putIndex(charIDToTypeID("Lyr "), iLayerIndex);
	} catch (e) {
	}
	ref.putIndex(charIDToTypeID("Lyr "), iLayerIndex);
	ref.putIndex(charIDToTypeID("Lyr "), iLayerIndex);
	var desc = new ActionDescriptor();
	desc.putReference(charIDToTypeID("null"), ref);
	if (bAddToSelection) desc.putEnumerated(stringIDToTypeID("selectionModifier"), stringIDToTypeID("selectionModifierType"), stringIDToTypeID("addToSelection"));
	desc.putBoolean(charIDToTypeID("MkVs"), false);
	try {
		executeAction(charIDToTypeID("slct"), desc, DialogModes.NO);
	} catch (e) {
		alert(e.message);
	}
}

BEPS.Layers_SelectByName = function(sLayerName){ //Return: nothing - This will select a layer or layerset by its name (not index number). 
 //sLayerName = must be a string with the layerset name
//USAGE:
//BEPS.Layers_SelectByName(srcDoc.layers[0].name)
//BEPS.Layers_SelectByName("CIR: Original")
 //BEPS.Layers_ActivateByIndex will activate a layer, but not necessarily select it
  
var idslct = charIDToTypeID( "slct" );
    var desc50 = new ActionDescriptor();
    var idnull = charIDToTypeID( "null" );
        var ref49 = new ActionReference();
        var idLyr = charIDToTypeID( "Lyr " );
        ref49.putName( idLyr, sLayerName);
    desc50.putReference( idnull, ref49 );
    var idMkVs = charIDToTypeID( "MkVs" );
    desc50.putBoolean( idMkVs, false );
executeAction( idslct, desc50, DialogModes.NO );
}
BEPS.Layers_PanelColorOf = function(sColor) { // RETURN - add a layer color to the layer in the layers panel window
//sColor = ('Gry ' , 'Ylw ')
  var desc2 = new ActionDescriptor();
  var ref2 = new ActionReference();
  ref2.putEnumerated( cTID('Lyr '), cTID('Ordn'), cTID('Trgt') );
  desc2.putReference( cTID('null'), ref2 );
  var desc3 = new ActionDescriptor();
  desc3.putEnumerated( cTID('Clr '), cTID('Clr '), cTID(sColor) );
  desc2.putObject( cTID('T   '), cTID('Lyr '), desc3 );
  executeAction( cTID('setd'), desc2, DialogModes.NO );
};

//Panel layerset object functions
BEPS.LayerSet_Collapse = function (oLayerSetName){//RETURN nothing (collapsed oLayerSetName); PARAMETERS: (oLayerSetName) USEAGE: BEPS.LayerSet_Collapse(app.activeDocument.activeLayer)
//www.ps-scripts.com/bb/viewtopic.php?f=9&t=3235&sid=8fcf40e33d85e8f73bffecc29f8f331a

//**WARNING**//  This script works as advertised, but it must create dummy layers for those collapsed alyerset with only a sinlge layer or oLayerSetName inside.  Trying to delete that dummy layer will open the oLayerSetName thereby nullifying the usefullness of this function
//For code readability

// =============================


// The main function
function closeGroup(layerSet) {
   var m_Name = layerSet.name;
   var m_Opacity = layerSet.opacity;
   var m_BlendMode = layerSet.blendMode;
   var m_LinkedLayers = layerSet.linkedLayers;
   
   var m_bHasMask = hasLayerMask();
   if(m_bHasMask) loadSelectionOfMask();

   if(layerSet.layers.length <= 1) {
      addLayer();
      var m_Tmp = activeDocument.activeLayer;
      m_Tmp.name = "Dummy - Remove Me";
      activeDocument.activeLayer = layerSet;
      ungroup();
      addToSelection("Dummy - Remove Me");
      groupSelected(m_Name);
      
   } else {
      activeDocument.activeLayer = layerSet;
      ungroup();
      groupSelected(m_Name);
   }

   var m_Closed = activeDocument.activeLayer;
   m_Closed.opacity = m_Opacity;
   m_Closed.blendMode = m_BlendMode;
   
   for(x in m_LinkedLayers) {
      if(m_LinkedLayers[x].typename == "LayerSet")
         activeDocument.activeLayer.link(m_LinkedLayers[x]);
   }
   
   if(m_bHasMask) maskFromSelection();
   
   return m_Closed;
}


// =============================


// Below are all necessary subroutines for the main function to work
function ungroup() {
   var m_Dsc01 = new ActionDescriptor();
   var m_Ref01 = new ActionReference();
   m_Ref01.putEnumerated( cTID( "Lyr " ), cTID( "Ordn" ), cTID( "Trgt" ) );
   m_Dsc01.putReference( cTID( "null" ), m_Ref01 );
   
   try {
      executeAction( sTID( "ungroupLayersEvent" ), m_Dsc01, DialogModes.NO );
   } catch(e) {}
}

function addLayer() {
   var m_ActiveLayer          =    activeDocument.activeLayer;
   var m_NewLayer             =    activeDocument.artLayers.add();
   m_NewLayer.move(m_ActiveLayer, ElementPlacement.PLACEBEFORE);
   
   return m_NewLayer;
}

function hasLayerMask() {
   var m_Ref01 = new ActionReference();
   m_Ref01.putEnumerated( sTID( "layer" ), cTID( "Ordn" ), cTID( "Trgt" ));
   var m_Dsc01= executeActionGet( m_Ref01 );
   return m_Dsc01.hasKey(cTID('Usrs'));
}

function activateLayerMask() {
   var m_Dsc01 = new ActionDescriptor();
   var m_Ref01 = new ActionReference();
   m_Ref01.putEnumerated( cTID( "Chnl" ), cTID( "Chnl" ), cTID( "Msk " ) );
   m_Dsc01.putReference( cTID( "null" ), m_Ref01 );
   
   try {
      executeAction( cTID( "slct" ), m_Dsc01, DialogModes.NO );
   } catch(e) {
      var m_TmpAlpha = new TemporaryAlpha();
      
      maskFromSelection();
      activateLayerMask();
      
      m_TmpAlpha.consume();
   }
}

function deleteMask(makeSelection) {
   if(makeSelection) {
      loadSelectionOfMask();
   }
   
   var m_Dsc01 = new ActionDescriptor();
   var m_Ref01 = new ActionReference();
   m_Ref01.putEnumerated( cTID( "Chnl" ), cTID( "Ordn" ), cTID( "Trgt" ) );
   m_Dsc01.putReference( cTID( "null" ), m_Ref01 );
   
   try {
      executeAction( cTID( "Dlt " ), m_Dsc01, DialogModes.NO );
   } catch(e) {}
}

function selectLayerMask() {
   var m_Dsc01 = new ActionDescriptor();
   var m_Ref01 = new ActionReference();

   m_Ref01.putEnumerated(cTID("Chnl"), cTID("Chnl"), cTID("Msk "));
   m_Dsc01.putReference(cTID("null"), m_Ref01);
   m_Dsc01.putBoolean(cTID("MkVs"), false );

   try {
      executeAction(cTID("slct"), m_Dsc01, DialogModes.NO );
   } catch(e) {}
}

function loadSelectionOfMask() {
   selectLayerMask();
   
   var m_Dsc01 = new ActionDescriptor();
   var m_Ref01 = new ActionReference();
   m_Ref01.putProperty( cTID( "Chnl" ), cTID( "fsel" ) );
   m_Dsc01.putReference( cTID( "null" ), m_Ref01 );
   var m_Ref02 = new ActionReference();
   m_Ref02.putEnumerated( cTID( "Chnl" ), cTID( "Ordn" ), cTID( "Trgt" ) );
   m_Dsc01.putReference( cTID( "T   " ), m_Ref02 );
   
   try {
      executeAction( cTID( "setd" ), m_Dsc01, DialogModes.NO );
   } catch(e) {}
}

function maskFromSelection() {
   if(!hasLayerMask()) {
      var m_Dsc01 = new ActionDescriptor();
      m_Dsc01.putClass( cTID( "Nw  " ), cTID( "Chnl" ) );
      var m_Ref01 = new ActionReference();
      m_Ref01.putEnumerated( cTID( "Chnl" ), cTID( "Chnl" ), cTID( "Msk " ) );
      m_Dsc01.putReference( cTID( "At  " ), m_Ref01 );
      m_Dsc01.putEnumerated( cTID( "Usng" ), cTID( "UsrM" ), cTID( "RvlS" ) );
      
      try {
         executeAction( cTID( "Mk  " ), m_Dsc01, DialogModes.NO );
      } catch(e) {
         activeDocument.selection.selectAll();
         maskFromSelection();
      }
   } else {
      if(confirm("Delete existing mask?", true, "Warning")) {
         activateLayerMask();
         deleteMask();
      }
   }
}

function groupSelected(name) {
   var m_Dsc01 = new ActionDescriptor();
   var m_Ref01 = new ActionReference();
   m_Ref01.putClass( sTID( "layerSection" ) );
   m_Dsc01.putReference(  cTID( "null" ), m_Ref01 );
   var m_Ref02 = new ActionReference();
   m_Ref02.putEnumerated( cTID( "Lyr " ), cTID( "Ordn" ), cTID( "Trgt" ) );
   m_Dsc01.putReference( cTID( "From" ), m_Ref02 );
   var m_Dsc02 = new ActionDescriptor();
   m_Dsc02.putString( cTID( "Nm  " ), name);
   m_Dsc01.putObject( cTID( "Usng" ), sTID( "layerSection" ), m_Dsc02 );
   executeAction( cTID( "Mk  " ), m_Dsc01, DialogModes.NO );
   
   return activeDocument.activeLayer;
}

function addToSelection(layerName) {
   var m_Dsc01 = new ActionDescriptor();
   var m_Ref01 = new ActionReference();
   m_Ref01.putName( cTID( "Lyr " ), layerName );
   m_Dsc01.putReference( cTID( "null" ), m_Ref01 );
   m_Dsc01.putEnumerated( sTID( "selectionModifier" ), sTID( "selectionModifierType" ), sTID( "addToSelection" ) );
   m_Dsc01.putBoolean( cTID( "MkVs" ), false );
   
   try {
      executeAction( cTID( "slct" ), m_Dsc01, DialogModes.NO );
   } catch(e) {}
}

function TemporaryAlpha() {
   activeDocument.selection.store((this.alpha = activeDocument.channels.add()));
   activeDocument.selection.deselect();
   
   this.consume = function() {
      activeDocument.selection.load(this.alpha);
      this.alpha.remove();
   }
 
 
}
closeGroup(oLayerSetName)





}	



BEPS.LayerSet_Expand = function(oLayerSetName){//RETURN nothing (expanded oLayerSetName); PARAMETERS: (oLayerSetName) USEAGE: BEPS.LayerSet_Expand(app.activeDocument.activeLayer)
function openGroup(oLayerSetName) {
   var m_activeLayer = activeDocument.activeLayer;
   
   var m_Layer_Dummy01 = oLayerSetName.artLayers.add();
   var m_Layer_Dummy02 = oLayerSetName.artLayers.add();
   oLayerSetName.layers[1].sName = oLayerSetName.layers[1].sName;
   m_Layer_Dummy01.remove();
   m_Layer_Dummy02.remove();
   
   activeDocument.activeLayer = m_activeLayer;
}	
openGroup(oLayerSetName)
}
BEPS.LayerSet_iGetIndexOfActivated = function(){ //RETURN integer value of activated layerset
	var ref = new ActionReference(); 
	ref.putEnumerated( charIDToTypeID("Lyr "), charIDToTypeID("Ordn"), charIDToTypeID("Trgt") ); 
	var desc = executeActionGet(ref); 
	var iActiveLayerSetIndex = desc.getInteger(charIDToTypeID("ItmI")); 
return iActiveLayerSetIndex-1; 
} 

BEPS.LayerSet_LayersMergedFrom = function(psDoc){ //RETURN nothing - dives into each layerset, makes all child layers visible and then merges those chold layers into a single layer
	traverseLayers = function (doc, ftn, reverse) {
		function _traverse(doc, layers, ftn, reverse) {
			var ok = true;
			for (var i = 1; i <= layers.length && ok != false; i++) {
				var index = (reverse == true) ? layers.length - i : i - 1;
				var layer = layers[index];
				if (layer.typename == "LayerSet") {
					ok = _traverse(doc, layer.layers, ftn, reverse);
					layer.visible = true;
					layer.merge();
				} else {
					ok = ftn(doc, layer);
				}
			}
			return ok;
		};

		return _traverse(doc, doc.layers, ftn, reverse);
	};

	traverseLayers(psDoc, function (d, l) {
		l.visible = true;
		return true;
	});
}

BEPS.LayerSet_MoveLayerSetInto = function(sMoveLayerSet,iTargetLayerSetIndex){
//sMoveLayerSet = String name of LayerSet
//iTargetLayerSetIndex = integer which can be obtained by using 'BEPS.LayerSet_iGetIndexOfActivated'
	var desc = new ActionDescriptor(); 
		var ref = new ActionReference(); 
		ref.putName( charIDToTypeID( "Lyr " ), sMoveLayerSet ); 
	desc.putReference( charIDToTypeID( "null" ), ref ); 
		var ref1 = new ActionReference(); 
		ref1.putIndex( charIDToTypeID( "Lyr " ), iTargetLayerSetIndex ); 
	desc.putReference( charIDToTypeID( "T   " ), ref1 ); 
	desc.putBoolean( charIDToTypeID( "Adjs" ), false ); 
executeAction( charIDToTypeID( "move" ), desc, DialogModes.NO ); 
}; 

BEPS.LayerSet_SelectedLayersInto = function(sLayerSetName) {//RETURN: nothing (puts selected layers into sLayerSetName) PARAMETERS:( sLayerSetName: name of new sLayerSetName) USEAGE: BEPS.LayerSet_SelectedLayersInto(layerName)
		var id63 = charIDToTypeID( "Mk  " );
		var desc13 = new ActionDescriptor();
		var id64 = charIDToTypeID( "null" );
		var ref10 = new ActionReference();
		var id65 = stringIDToTypeID( "layerSection" );
		ref10.putClass( id65 );
		desc13.putReference( id64, ref10 );
		var id66 = charIDToTypeID( "From" );
		var ref11 = new ActionReference();
		var id67 = charIDToTypeID( "Lyr " );
		var id68 = charIDToTypeID( "Ordn" );
		var id69 = charIDToTypeID( "Trgt" );
		ref11.putEnumerated( id67, id68, id69 );
		desc13.putReference( id66, ref11 );
		var id70 = charIDToTypeID( "Usng" );
		var desc14 = new ActionDescriptor();
		var id71 = charIDToTypeID( "Nm  " );
		desc14.putString( id71, sLayerSetName );
		var id72 = stringIDToTypeID( "layerSection" );
		desc13.putObject( id70, id72, desc14 );
		executeAction( id63, desc13, DialogModes.NO );
	}

BEPS.Layerset_bExist = function(sLayerSetName){  //RETURN (TRUE if the string is found, False if layer name not found)  Use a string to see if the layerset exists in the active document
  //sLayerSetName = "CIR"
	for(var i=0;i<activeDocument.layerSets.length;i++){ 
		if(activeDocument.layerSets[i].name == sLayerSetName) {return true;} 
	} 
	return false; 
};

//Document selction functions
BEPS.Select_CurrentSelectionAddToSelectionFrom = function(sLayerName) {/* Will add visible pixels in this layer to the selection.
sLayerName: "IR" (string name of layer to add to selection) 
Notes: Script will fail if there are not pixels already selected
*/
    var desc3 = new ActionDescriptor();
        var ref1 = new ActionReference();
        ref1.putEnumerated( cTID('Chnl'), cTID('Chnl'), cTID('Trsp') );
        ref1.putName( cTID('Lyr '), sLayerName );
    desc3.putReference( cTID('null'), ref1 );
        var ref2 = new ActionReference();
        ref2.putProperty( cTID('Chnl'), cTID('fsel') );
    desc3.putReference( cTID('T   '), ref2 );
    executeAction( cTID('Add '), desc3, DialogModes.NO );
};




BEPS.Select_VisiblePixels = function() {/*select only visible pixels on active layer
*/
    var desc15 = new ActionDescriptor();
        var ref9 = new ActionReference();
        ref9.putProperty( cTID('Chnl'), cTID('fsel') );
    desc15.putReference( cTID('null'), ref9 );
        var ref10 = new ActionReference();
        ref10.putEnumerated( cTID('Chnl'), cTID('Chnl'), cTID('Trsp') );
    desc15.putReference( cTID('T   '), ref10 );
    executeAction( cTID('setd'), desc15, DialogModes.NO );
};

//Bridge functions from PS
BEPS.Bridge_SendMetaDataTo = function(sURIPathFile,sNameSpace,sDataProperty,sDataValue,nSleep){
// As Strings ie Bridge_SendMetaDataTo("~/Desktop/angie.psd","http://ns.adobe.com/xap/1.0/","Label","Blue") 
 //var sMe = "setMetadata()"
  if(nSleep == undefined)var nSleep = 2000  //sometimes it is necessary to pause Bridge a bit before the command is executed
 var bt = new BridgeTalk (); 
 var theScript = '$.sleep(' + nSleep + ');tn = new Thumbnail( File("'+sURIPathFile+'") );md = tn.synchronousMetadata;md.namespace = "'+sNameSpace+'";md.'+sDataProperty+' = "'+sDataValue+'";md.'+sDataProperty+';'; 
 bt.target = 'bridge'; 
 bt.body = theScript; 
 bt.send();    
}
BEPS.Bridge_SendRatingTo = function(sURIPathFile,nRating,nSleep){
//nRating = 0,1,2,3,4,5
 //var sMe = "setMetadata()"
 if(nSleep == undefined)var nSleep = 2000  //sometimes it is necessary to pause Bridge a bit before the command is executed
 var bt = new BridgeTalk (); 
 var theScript = '$.sleep(' + nSleep + ');tn = new Thumbnail( File("'+sURIPathFile+'") );tn.rating = '+nRating+';'; 
 bt.target = 'bridge'; 
 bt.body = theScript; 
 bt.send();    
}


BEPS.Bridge_SelectFileIn = function(sURIPathFile,nSleep){
//sURIPathFile = "/g/20120430_WH_Flight/CV20120427_0058_CIR_p03_WH.tif"
//nSleep = in miliseconds ; 1000 = 1 second    
if(nSleep == undefined)var nSleep = 2000  //sometimes it is necessary to pause Bridge a bit before the command is executed
 var bt = new BridgeTalk (); 
 var theScript = '$.sleep(' + nSleep + ');tn = new Thumbnail( File("'+sURIPathFile+'") );app.document.deselectAll(); app.document.select(tn); '; 
  bt.target = 'bridge'; 
 bt.body = theScript; 
 bt.send();
 }
//Macros:
BEPS.Macro_ApplyRatingAndSaveAndClose = function(nRating){
	var psDoc = app.activeDocument
	var sPathFileExt = psDoc.fullName
    if(BEPS.bDocument_Modified() == true)BEPS.File_Save(sPathFileExt,"tif") //if the document has been modified then save it
	BEPS.Bridge_SendRatingTo(sPathFileExt,nRating,500) //Send rating to bridge
    psDoc.close(SaveOptions.DONOTSAVECHANGES)
}
